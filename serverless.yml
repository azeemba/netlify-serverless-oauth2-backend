service: serverless-oauth2
provider:
  name: aws
  runtime: nodejs8.10
  profile: lambda
  environment:
    GIT_HOSTNAME: "/github/oauth/default/GIT_HOSTNAME"
    OAUTH_TOKEN_PATH: "/github/oauth/default/OAUTH_TOKEN_PATH"
    OAUTH_AUTHORIZE_PATH: "/github/oauth/default/OAUTH_AUTHORIZE_PATH"
    OAUTH_CLIENT_ID: "/github/oauth/default/OAUTH_CLIENT_ID"
    OAUTH_CLIENT_SECRET:  "/github/oauth/default/OAUTH_CLIENT_SECRET"
    REDIRECT_URL: "/github/oauth/default/REDIRECT_URL"
    OAUTH_SCOPES: "/github/oauth/default/OAUTH_SCOPES"
    TZ: "utc"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:DescribeParameters
        - ssm:GetParameters
      Resource: "arn:aws:ssm:${opt:region, self:provider.region}:*:parameter/github/oauth/default/*"
    - Effect: Allow
      Action:
        - kms:Decrypt
      Resource: "arn:aws:kms:us-east-2:*:key/4ed45fcb-07cb-4309-87cd-8bde14b15f1"

functions:
  auth:
    handler: auth.auth
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: /auth
          method: get
          cors: true               
  callback:
    handler: auth.callback
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: /callback
          method: get
          cors: true
  success:
    handler: auth.success
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: /success
          method: get
          cors: true  
  default:
    handler: auth.default
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: /
          method: get
          cors: true 

plugins:
  - serverless-plugin-optimize
  - serverless-offline

package:
  individually: true
